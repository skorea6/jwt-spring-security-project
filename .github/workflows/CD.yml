# workflow의 이름
name: CD

# 해당 workflow가 언제 실행될 것인지에 대한 트리거를 지정
on:
  push:
    branches: [ master ] # master branch로 push 될 때 실행됩니다.

# 해당 yml 내에서 사용할 key - value
env:
  S3_BUCKET_NAME: jwt-project-bucket
  PROJECT_NAME: jwt-spring-security-project
  
# workflow는 한개 이상의 job을 가지며, 각 job은 여러 step에 따라 단계를 나눌 수 있습니다.
jobs:
  build:
    name: CD
    # 해당 jobs에서 아래의 steps들이 어떠한 환경에서 실행될 것인지를 지정합니다.
    runs-on: ubuntu-latest

    steps:
     # 작업에서 액세스할 수 있도록 $GITHUB_WORKSPACE에서 저장소를 체크아웃합니다.
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set Yaml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application-prod.yml
        env:
          spring.datasource.url: ${{ secrets.DB_URL }}
          spring.datasource.username: ${{ secrets.DB_USERNAME }}
          spring.datasource.password: ${{ secrets.DB_PASSWORD }}
          spring.security.oauth2.client.registration.google.client-id: ${{ secrets.OAUTH2_GOOGLE_CLIENT_ID }}
          spring.security.oauth2.client.registration.google.client-secret: ${{ secrets.OAUTH2_GOOGLE_CLIENT_SECRET }}
          spring.security.oauth2.client.registration.naver.client-id: ${{ secrets.OAUTH2_NAVER_CLIENT_ID }}
          spring.security.oauth2.client.registration.naver.client-secret: ${{ secrets.OAUTH2_NAVER_CLIENT_SECRET }}
          spring.security.oauth2.client.registration.kakao.client-id: ${{ secrets.OAUTH2_KAKAO_CLIENT_ID }}
          spring.security.oauth2.client.registration.kakao.client-secret: ${{ secrets.OAUTH2_KAKAO_CLIENT_SECRET }}
          recaptcha.secret: ${{ secrets.RECAPTCHA_SECRET }}
          aws.ses.access_key: ${{ secrets.AWS_SES_ACCESS_KEY }}
          aws.ses.secret_key: ${{ secrets.AWS_SES_SECRET_KEY }}
          jwt.access_secret: ${{ secrets.JWT_ACCESS_SECRET }}
          jwt.refresh_secret: ${{ secrets.JWT_REFRESH_SECRET }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build
        shell: bash
        
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      # script files 복사
      - name: Copy script
        run: cp ./scripts/*.sh ./deploy
      
      # S3에 업로드
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip
